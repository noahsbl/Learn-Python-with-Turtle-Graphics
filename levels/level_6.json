{
    "tutorial": "<p class=\"p-font\"><b>Aufgabe:</b></p><p class=\"p-font\"><b>Verwende verschachelte for-Schleifen um 9 mal die gleiche Form mit der Funkion <span class=\"code-hint-font\">form()</span>, in einem 3 x 3 Raster zu zeichnen!</b></p><p class=\"p-font\"><b>Zuvor muss die Funktion <span class=\"code-hint-font\">form()</span> definiert werden. Hierbei kannst du Code aus Level 3 wieder verwenden.</b></p><p class=\"p-font\"><b>Hierfür muss man auf 9 verschiedenen Positionen gezeichnet werden. Mit <span class=\"code-hint-font\">t.goto(x, y)</span> kann man die Turtle auf eine Position bewegen lassen.</b></p><br><p class=\"p-font\">Verschachtelte for-Schleifen bestehen aus 2 oder mehr for-Schleifen. Bei 2 wird die innere Schleife von der äußeren Schleife mehrfach ausgeführt.</p><pre class=\"code-hint\"><code><span class=\"code-hint-font\">for x in range(3):\n\tfor y in range(5):\n\t\tprint('(' + str(x) + ',' + str(y) + ')', end='')\t# Gibt '(x,y)' aus. end='' verhindert einen Zeilenumbruch nach der Ausgabe.\n\tprint()\t# Zeilenumbruch\n\n# Konsole:\n# \t(0,0)(0,1)(0,2)(0,3)(0,4)\n# \t(1,0)(1,1)(1,2)(1,3)(1,4)\n# \t(2,0)(2,1)(2,2)(2,3)(2,4)\n</span></code></pre><p class=\"p-font\">Hier wird <span class=\"code-hint-font\">t.goto(x, y)</span> eingesetzt, um die Position zu einer Koordinate mit <span class=\"code-hint-font\">x</span> und <span class=\"code-hint-font\">y</span> bewegen zu lassen.</p><pre class='code-hint'><code><span class=\"code-hint-font\">x = 100\ny = 200\n\nt.goto(x, y) # Bewegt Turtle zur Position (100, 200)\n</span></code></pre><p class=\"p-font\">Hier wird <span class=\"code-hint-font\">t.goto(x, y)</span> eingesetzt, um 3 Dreiecke mit einem Abstand von 100 zueinander zu zeichnen.</p><pre class='code-hint'><code><span class=\"code-hint-font\">distance = 100 # Abstand\ny = 0\n\nfor x in range(3): # dreimal\n\tt.goto(x * distance, y) # auf der Position (0, 0), (100, 0) und (200, 0)\n\tfor _ in range(3): # Dreieck zeichnen\n\t\tt.forward(30)\n\t\tt.right(120)\n</span></code></pre>",
    "init_code": "t = init_turtle(turtle) # Diese Zeile bitte nicht entfernen oder ändern\n\ndef form(corner_num=30, length=10, color='blue'):\n    pass # Definiere den Inhalt der Funktion \"form()\"! Teile der Lösung aus Level 3 können dir dabei hilfreich sein. \"pass\" ist hier nur ein Platzhalter und kann entfernt werden.\n\n# Verwende hier eine verschachtelte for-Schleife, die 9 (3 * 3) mal mit goto() die Position setzt und die Funktion form() aufruft, um eine Form zu zeichnen!\n",
    "solution_code": "t = init_turtle(turtle) # Diese Zeile bitte nicht entfernen oder ändern\n\ndef form(corner_num=30, length=10, color='blue'): # Funktionskopf, darunter eingerückter Code wird beim Aufruf der Funktion ausgeführt\n\tangle = 360 / corner_num\t# Winkel berechnet mit Anzahl der Ecken\n\tt.color(color)\t\t\t\t# färbt Schildkröte mit übergebener Farbe\n\tfor _ in range(corner_num):\t# for-Schleifenkopf, darunter eingerückter Code wird so oft wiederholt wie in der Variable mit Anzahl der Ecken angegeben\n\t\tt.forward(length)\t\t\t# Kantenlänge nachvorne\n\t\tt.left(angle)\t\t\t\t# Schildkröte um den Wert Winkel Variable nach links drehen\n\nfor x in range(3):\t# for-Schleifenkopf, darunter eingerückter Code wird 3 mal wiederholt\n\tfor y in range(3):\t# for-Schleifenkopf, darunter eingerückter Code wird 3 mal wiederholt\n\t\tt.goto(100 * x, 100 * y)\t# zu Koordinaten gehen\n\t\tform()\t\t\t\t\t\t# Aufruf der Funktion zum Form zeichnen\n"
}